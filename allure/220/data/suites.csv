"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"","5","testLastArgParticipant()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testLastArgParticipant"
"","101","should inject context with default realm","Context Injection","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Context injection tests","",""
"","104","should invoke greet synchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Non-async methods without scope","",""
"","7","testUnknownFailure()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testUnknownFailure"
"","44","should invoke combine with multiple args synchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Non-async methods without scope","",""
"","32","should propagate interceptor error","Context Injection","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Context injection tests","",""
"","4019","testInfiniteFlux()","","Tue May 20 09:47:46 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testInfiniteFlux"
"","6","testFirstArgParticipant()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testFirstArgParticipant"
"","7","testNestedArrays()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testNestedArrays"
"","4","testMonoWithVoidFromEmpty()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoWithVoidFromEmpty"
"","22","should fail when too few arguments are provided to combine","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Argument count mismatch","Error propagation","",""
"","28","should invoke greet with scope synchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Non-async methods with scope","",""
"","1691","testSimple()","","Tue May 20 09:47:57 GMT 2025","passed","Tue May 20 09:47:58 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testSimple"
"","46","should allow connection with session id","Continuum Client Tests","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","","",""
"","13","should propagate asynchronous error","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Async errors without scope","Error propagation","",""
"","18","testPutNestedGenerics()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testPutNestedGenerics"
"","166","should connect and disconnect","Continuum Client Tests","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","","",""
"","9","testMissingServiceFailure()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMissingServiceFailure"
"","31","testMissingRemoteMethodFailure()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMissingRemoteMethodFailure"
"","20","should invoke combine with scope synchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Non-async methods with scope","",""
"","27","should process complex object without scope","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Complex object handling","Error propagation","",""
"","48","should connect and disconnect multiple times","Continuum Client Tests","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","","",""
"","10367","testSingleProducerMultiConsumer()","","Tue May 20 09:48:10 GMT 2025","passed","Tue May 20 09:48:20 GMT 2025","","org.kinotic.util.TestFluxFactory","org.kinotic.util.TestFluxFactory","testSingleProducerMultiConsumer"
"","122","testVertxFutureNullString()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testVertxFutureNullString"
"","26","should allow continuum CLI to connect but not send any data","Continuum Client Tests","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","","",""
"","18","should invoke multiArgs with scope asynchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Async methods with scope","",""
"","12","testPutMapOfSimpleObjects()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testPutMapOfSimpleObjects"
"","39","should distinguish between methods with different names (no scope)","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Method parsing and conflict avoidance","",""
"","17","testMiddleArgParticipant()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMiddleArgParticipant"
"","14","testAutowireCollection()","","Tue May 20 09:47:57 GMT 2025","passed","Tue May 20 09:47:57 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testAutowireCollection"
"","36","should invoke multiArgs with multiple args asynchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Async methods without scope","",""
"","22","testMonoWithVoidFromNull()","","Tue May 20 09:47:46 GMT 2025","passed","Tue May 20 09:47:46 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoWithVoidFromNull"
"","33","should inject context with tenant1 realm","Context Injection","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Context injection tests","",""
"","1427","testException()","","Tue May 20 09:47:55 GMT 2025","passed","Tue May 20 09:47:57 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testException"
"","50","should distinguish between methods with different names (with scope)","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Method parsing and conflict avoidance","",""
"","10","should process list of complex objects with scope","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Complex object handling","Error propagation","",""
"","4","testMonoStringNull()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoStringNull"
"","11","testSendTokenBuffer()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSendTokenBuffer"
"","29","should return missing method error","Continuum RPC Tests","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","","","",""
"","103","testVertxFuture()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testVertxFuture"
"","11","testSendCollection()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSendCollection"
"","27","should handle async context injection","Context Injection","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Context injection tests","",""
"","7","testMonoEmptyString()","","Tue May 20 09:47:46 GMT 2025","passed","Tue May 20 09:47:46 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoEmptyString"
"","21","should invoke fetchData asynchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Async methods without scope","",""
"","25","should invoke fetchData with scope asynchronously","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:35 GMT 2025","","Async methods with scope","",""
"","19","should propagate synchronous error","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Non-async errors without scope","Error propagation","",""
"","12","should process list of complex objects without scope","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Complex object handling","Error propagation","",""
"","5","testMonoStringLiterallyNull()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoStringLiterallyNull"
"","11","should process complex object with scope","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Complex object handling","Error propagation","",""
"","26","testRawCRI1()","","Tue May 20 09:47:37 GMT 2025","passed","Tue May 20 09:47:37 GMT 2025","","org.kinotic.continuum.internal.core.api.CRITests","org.kinotic.continuum.internal.core.api.CRITests","testRawCRI1"
"","16","testAutowired()","","Tue May 20 09:47:57 GMT 2025","passed","Tue May 20 09:47:57 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testAutowired"
"","73","testPutListOfSimpleObjects()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testPutListOfSimpleObjects"
"","14","testSimpleObject()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSimpleObject"
"","1","testReverseCopyLarge()","","Tue May 20 09:48:10 GMT 2025","passed","Tue May 20 09:48:10 GMT 2025","","org.kinotic.util.FileUtilTests","org.kinotic.util.FileUtilTests","testReverseCopyLarge"
"","11","should fail invalid service request","Continuum RPC Tests","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","","","",""
"","6044","should connect and disconnect","Continuum Unavailable Tests","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:42 GMT 2025","","","",""
"","1346","testSerializeDeserializeObjectC3Type()","","Tue May 20 09:48:25 GMT 2025","passed","Tue May 20 09:48:26 GMT 2025","","org.kinotic.continuum.idl.internal.TestIdl","org.kinotic.continuum.idl.internal.TestIdl","testSerializeDeserializeObjectC3Type"
"","1","testEventStreamWriteWithoutKey()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","testEventStreamWriteWithoutKey"
"","4","testReceiveCollection()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testReceiveCollection"
"","8","testSendAndReceiveCollection()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSendAndReceiveCollection"
"","45","testCreateFindRemove()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.TestSessionManager","org.kinotic.continuum.internal.core.api.TestSessionManager","testCreateFindRemove"
"","24","testSchemaFactory()","","Tue May 20 09:48:26 GMT 2025","passed","Tue May 20 09:48:26 GMT 2025","","org.kinotic.continuum.idl.internal.TestSchemaFactory","org.kinotic.continuum.idl.internal.TestSchemaFactory","testSchemaFactory"
"","16","should propagate asynchronous error with scope","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Async errors with scope","Error propagation","",""
"","56","testReverseCopyMedium()","","Tue May 20 09:48:10 GMT 2025","passed","Tue May 20 09:48:10 GMT 2025","","org.kinotic.util.FileUtilTests","org.kinotic.util.FileUtilTests","testReverseCopyMedium"
"","47","should execute method with string parameter","Continuum RPC Tests","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","","","",""
"","1153","testRpcCompletableFutureString()","","Tue May 20 09:47:45 GMT 2025","passed","Tue May 20 09:47:46 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testRpcCompletableFutureString"
"","22","testMonoIntegerNull()","","Tue May 20 09:47:46 GMT 2025","passed","Tue May 20 09:47:46 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoIntegerNull"
"","12","should return missing service error","Continuum RPC Tests","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","","","",""
"","41","should fail when too many arguments are provided to greet","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Argument count mismatch","Error propagation","",""
"","1","testReverseCopySmall()","","Tue May 20 09:48:10 GMT 2025","passed","Tue May 20 09:48:10 GMT 2025","","org.kinotic.util.FileUtilTests","org.kinotic.util.FileUtilTests","testReverseCopySmall"
"","1","testRawCRI2()","","Tue May 20 09:47:37 GMT 2025","passed","Tue May 20 09:47:37 GMT 2025","","org.kinotic.continuum.internal.core.api.CRITests","org.kinotic.continuum.internal.core.api.CRITests","testRawCRI2"
"","17","testABunchOfArguments()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testABunchOfArguments"
"","0","testEventStreamWriteWithKey()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","testEventStreamWriteWithKey"
"","15","testMultipleRequests()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMultipleRequests"
"","10","testLimitedFlux()","","Tue May 20 09:47:51 GMT 2025","passed","Tue May 20 09:47:51 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testLimitedFlux"
"","5","testMonoWithValue()","","Tue May 20 09:47:50 GMT 2025","passed","Tue May 20 09:47:50 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoWithValue"
"","10","should propagate synchronous error with scope","Publish Mechanism","Tue May 20 09:51:36 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","Non-async errors with scope","Error propagation","",""
"","43","should handle scoped vs unscoped services independently","Publish Mechanism","Tue May 20 09:51:35 GMT 2025","passed","Tue May 20 09:51:36 GMT 2025","","Method parsing and conflict avoidance","",""
