"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"","180","should connect and disconnect","Continuum Client Tests","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","","",""
"","13","testPutMapOfSimpleObjects()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testPutMapOfSimpleObjects"
"","40","should invoke multiArgs with multiple args asynchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Async methods without scope","",""
"","39","should fail when too few arguments are provided to combine","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Argument count mismatch","Error propagation","",""
"","19","testMiddleArgParticipant()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMiddleArgParticipant"
"","26","testRawCRI1()","","Tue Aug 26 20:50:46 GMT 2025","passed","Tue Aug 26 20:50:47 GMT 2025","","org.kinotic.continuum.internal.core.api.CRITests","org.kinotic.continuum.internal.core.api.CRITests","testRawCRI1"
"","10","testSendCollection()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSendCollection"
"","23","should propagate interceptor error","Context Injection","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Context injection tests","",""
"","14","testSimpleObject()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSimpleObject"
"","55","testCreateFindRemove()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.TestSessionManager","org.kinotic.continuum.internal.core.api.TestSessionManager","testCreateFindRemove"
"","14","testAutowireCollection()","","Tue Aug 26 20:51:27 GMT 2025","passed","Tue Aug 26 20:51:27 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testAutowireCollection"
"","9","testMonoStringLiterallyNull()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoStringLiterallyNull"
"","13","should return missing service error","Continuum RPC Tests","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","","","",""
"","0","testEventStreamWriteWithKey()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","testEventStreamWriteWithKey"
"","51","should distinguish between methods with different names (no scope)","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","","Method parsing and conflict avoidance","",""
"","83","should invoke greet synchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Non-async methods without scope","",""
"","38","testMissingRemoteMethodFailure()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMissingRemoteMethodFailure"
"","16","should propagate asynchronous error with scope","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Async errors with scope","Error propagation","",""
"","9","testMultipleRequests()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMultipleRequests"
"","29","should invoke combine with multiple args synchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Non-async methods without scope","",""
"","81","should connect and disconnect multiple times","Continuum Client Tests","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","","",""
"","4019","testInfiniteFlux()","","Tue Aug 26 20:50:56 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testInfiniteFlux"
"","16","testAutowired()","","Tue Aug 26 20:51:27 GMT 2025","passed","Tue Aug 26 20:51:27 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testAutowired"
"","13","should fail when too many arguments are provided to greet","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Argument count mismatch","Error propagation","",""
"","1383","testException()","","Tue Aug 26 20:51:25 GMT 2025","passed","Tue Aug 26 20:51:26 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testException"
"","75","testPutListOfSimpleObjects()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testPutListOfSimpleObjects"
"","28","testMonoWithVoidFromNull()","","Tue Aug 26 20:50:55 GMT 2025","passed","Tue Aug 26 20:50:56 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoWithVoidFromNull"
"","10392","testSingleProducerMultiConsumer()","","Tue Aug 26 20:51:48 GMT 2025","passed","Tue Aug 26 20:51:58 GMT 2025","","org.kinotic.util.TestFluxFactory","org.kinotic.util.TestFluxFactory","testSingleProducerMultiConsumer"
"","32","should invoke fetchData with scope asynchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Async methods with scope","",""
"","35","should distinguish between methods with different names (with scope)","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","","Method parsing and conflict avoidance","",""
"","30","should return missing method error","Continuum RPC Tests","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","","","",""
"","24","testMonoIntegerNull()","","Tue Aug 26 20:50:55 GMT 2025","passed","Tue Aug 26 20:50:55 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoIntegerNull"
"","16","should fail invalid service request","Continuum RPC Tests","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","","","",""
"","34","should invoke combine with scope synchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Non-async methods with scope","",""
"","6","testMonoStringNull()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoStringNull"
"","3","testReceiveCollection()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testReceiveCollection"
"","19","should process complex object without scope","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Complex object handling","Error propagation","",""
"","51","should execute method with string parameter","Continuum RPC Tests","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","","","",""
"","45","testReverseCopyMedium()","","Tue Aug 26 20:51:47 GMT 2025","passed","Tue Aug 26 20:51:48 GMT 2025","","org.kinotic.util.FileUtilTests","org.kinotic.util.FileUtilTests","testReverseCopyMedium"
"","7","testNestedArrays()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testNestedArrays"
"","31","should process list of complex objects without scope","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Complex object handling","Error propagation","",""
"","1","testEventStreamWriteWithoutKey()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","org.kinotic.continuum.internal.core.api.event.EventStreamServiceTest","testEventStreamWriteWithoutKey"
"","6046","should connect and disconnect","Continuum Unavailable Tests","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:52 GMT 2025","","","",""
"","14","testPutNestedGenerics()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testPutNestedGenerics"
"","46","should inject context with tenant1 realm","Context Injection","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Context injection tests","",""
"","13","should propagate synchronous error","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Non-async errors without scope","Error propagation","",""
"","6","testMonoWithValue()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoWithValue"
"","18","testABunchOfArguments()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testABunchOfArguments"
"","2","testReverseCopyLarge()","","Tue Aug 26 20:51:48 GMT 2025","passed","Tue Aug 26 20:51:48 GMT 2025","","org.kinotic.util.FileUtilTests","org.kinotic.util.FileUtilTests","testReverseCopyLarge"
"","13","testSendTokenBuffer()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSendTokenBuffer"
"","3234","testSimple()","","Tue Aug 26 20:51:27 GMT 2025","passed","Tue Aug 26 20:51:30 GMT 2025","","org.kinotic.continuum.grind.internal.api.TestJobService","org.kinotic.continuum.grind.internal.api.TestJobService","testSimple"
"","2","testReverseCopySmall()","","Tue Aug 26 20:51:48 GMT 2025","passed","Tue Aug 26 20:51:48 GMT 2025","","org.kinotic.util.FileUtilTests","org.kinotic.util.FileUtilTests","testReverseCopySmall"
"","8","testSendAndReceiveCollection()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testSendAndReceiveCollection"
"","31","should invoke multiArgs with scope asynchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Async methods with scope","",""
"","18","should process list of complex objects with scope","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Complex object handling","Error propagation","",""
"","39","should handle async context injection","Context Injection","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Context injection tests","",""
"","1","testRawCRI2()","","Tue Aug 26 20:50:47 GMT 2025","passed","Tue Aug 26 20:50:47 GMT 2025","","org.kinotic.continuum.internal.core.api.CRITests","org.kinotic.continuum.internal.core.api.CRITests","testRawCRI2"
"","8","testUnknownFailure()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testUnknownFailure"
"","36","should invoke fetchData asynchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Async methods without scope","",""
"","34","should propagate synchronous error with scope","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Non-async errors with scope","Error propagation","",""
"","7","testMonoEmptyString()","","Tue Aug 26 20:50:56 GMT 2025","passed","Tue Aug 26 20:50:56 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoEmptyString"
"","35","testSchemaFactory()","","Tue Aug 26 20:51:42 GMT 2025","passed","Tue Aug 26 20:51:42 GMT 2025","","org.kinotic.continuum.idl.internal.TestSchemaFactory","org.kinotic.continuum.idl.internal.TestSchemaFactory","testSchemaFactory"
"","12","should propagate asynchronous error","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Async errors without scope","Error propagation","",""
"","5","testMonoWithVoidFromEmpty()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMonoWithVoidFromEmpty"
"","50","should allow connection with session id","Continuum Client Tests","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","","",""
"","6","testFirstArgParticipant()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testFirstArgParticipant"
"","1143","testSerializeDeserializeObjectC3Type()","","Tue Aug 26 20:51:41 GMT 2025","passed","Tue Aug 26 20:51:42 GMT 2025","","org.kinotic.continuum.idl.internal.TestIdl","org.kinotic.continuum.idl.internal.TestIdl","testSerializeDeserializeObjectC3Type"
"","996","testRpcCompletableFutureString()","","Tue Aug 26 20:50:54 GMT 2025","passed","Tue Aug 26 20:50:55 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testRpcCompletableFutureString"
"","9","testMissingServiceFailure()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testMissingServiceFailure"
"","9","testLimitedFlux()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testLimitedFlux"
"","105","testVertxFuture()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testVertxFuture"
"","39","should invoke greet with scope synchronously","Publish Mechanism","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Non-async methods with scope","",""
"","5","testLastArgParticipant()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testLastArgParticipant"
"","82","should inject context with default realm","Context Injection","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","Context injection tests","",""
"","10","should process complex object with scope","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","Complex object handling","Error propagation","",""
"","41","should allow continuum CLI to connect but not send any data","Continuum Client Tests","Tue Aug 26 20:55:45 GMT 2025","passed","Tue Aug 26 20:55:45 GMT 2025","","","",""
"","124","testVertxFutureNullString()","","Tue Aug 26 20:51:00 GMT 2025","passed","Tue Aug 26 20:51:00 GMT 2025","","org.kinotic.continuum.internal.core.api.RpcTests","org.kinotic.continuum.internal.core.api.RpcTests","testVertxFutureNullString"
"","32","should handle scoped vs unscoped services independently","Publish Mechanism","Tue Aug 26 20:55:46 GMT 2025","passed","Tue Aug 26 20:55:46 GMT 2025","","Method parsing and conflict avoidance","",""
