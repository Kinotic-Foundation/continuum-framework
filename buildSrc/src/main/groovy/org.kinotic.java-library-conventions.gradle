plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id 'org.kinotic.java-common-conventions'

    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser'
}

dependencies {

}


java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            from components.java

            // Use resolved versions since we are not directly depending on the spring POM
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'Continuum Framework'
                description = 'A Microservice and IOT framework for everyone!'
                url = 'https://continuumframework.org'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Kinotic Developers'
                        email = 'develop@kinotic.org'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/Kinotic-Foundation/continuum-framework.git'
                    developerConnection = 'scm:git:https://github.com/Kinotic-Foundation/continuum-framework.git'
                    url = 'https://github.com/Kinotic-Foundation/continuum-framework'
                }
            }
        }
    }
    // Here is where JReleaser will look for the staged files
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
        verify = false
    }
    deploy {
        maven {
            mavenCentral {
                'release-deploy' {
                    active = 'RELEASE'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
            nexus2 {
                'snapshot-deploy' {
                    active = 'SNAPSHOT'
                    snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots/'
                    applyMavenCentralRules = true
                    snapshotSupported = true
                    closeRepository = true
                    releaseRepository = true
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}

javadoc {
    // suppress warnings
    options.addStringOption('Xdoclint:none', '-quiet')

    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
